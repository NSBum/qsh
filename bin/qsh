#!/bin/bash

QSH_BASE=~/.qsh
QSH_CLIENTS=$QSH_BASE/clients
QSH_CONNECTIONS=$QSH_BASE/connections

function qsh_invoke_with_password {
  read -r -d '' QSH_INVOKE_PASSWORD <<EOF
    trap {
      set XZ [stty rows]
      set YZ [stty columns]
      stty rows \$XZ columns \$YZ < \$spawn_out(slave,name)
    } WINCH

    set timeout -1
    log_user 0
    spawn $QSH_INVOCATION 
    match_max 100000
    expect -exact "$PASSWORD_PROMPT"
    send -- "$PASSWORD\r"

    interact {
      -o eof {exit}
    }
EOF

  expect -c "$QSH_INVOKE_PASSWORD";
}

function qsh_invoke {
  read -r -d '' QSH_INVOKE <<EOF
    trap {
      set XZ [stty rows]
      set YZ [stty columns]
      stty rows \$XZ columns \$YZ < \$spawn_out(slave,name)
    } WINCH

    set timeout -1
    log_user 0
    spawn $QSH_INVOCATION 
    match_max 100000

    interact {
      -o eof {exit}
    }
EOF

  expect -c "$QSH_INVOKE";
}

while getopts "c:" arg; do
  case $arg in
    c)
      CLIENT_COMMAND=$OPTARG
      ;;
  esac
done

# Move past the options
shift $(expr $OPTIND - 1);

CONNECTION=$1
shift 1;
if [[ -z "$CONNECTION" ]]; then
  echo "usage: qsh [-c] <connection> | <invocation>";
  echo;
  tree --prune --noreport "$QSH_CONNECTIONS";
  exit 0;
fi;

CONNECTION_JSON=$CONNECTION;
if [[ "$CONNECTION_JSON" != *.json ]]; then
  CONNECTION_JSON="${CONNECTION}.json";
fi;

CONNECTION_FILE=$QSH_CONNECTIONS/$CONNECTION_JSON
if [[ ! -f "$CONNECTION_FILE" ]]; then
  # Try to perform a direct invocation
  CLIENT=$CONNECTION
  INVOCATION="$*"
  PASSWORD=null
  PROMPT=true

  CLIENT_NAME=$(basename "$CLIENT");
  if [[ ! -d "$QSH_CLIENTS/$CLIENT_NAME" ]]; then
    echo "invalid connection/invocation";
    exit -1;
  fi;

  # Invoke the client
  source "$QSH_CLIENTS/$CLIENT_NAME/qsh-connect";
  exit;
fi;

CONNECTION_DATA=$(cat "$CONNECTION_FILE");

CLIENT="$(echo "$CONNECTION_DATA" | jq -r '.client')";
CLIENT_NAME=$(basename "$CLIENT");

INVOCATION="$(echo "$CONNECTION_DATA" | jq -r '.invocation')";
PROMPT="$(echo "$CONNECTION_DATA" | jq -r '.prompt')";
USING_PASSWORD="$(echo "$CONNECTION_DATA" | jq -r '.using_password')";
PROMPT="$(echo "$CONNECTION_DATA" | jq -r '.prompt')";
VANILLA="$(echo "$CONNECTION_DATA" | jq -r '.vanilla')";

if [[ ! -z "$CLIENT_COMMAND" ]]; then
  CLIENT=$CLIENT_COMMAND
  VANILLA=true
fi;

if [ "$CLIENT" == "null" ] || [ "$INVOCATION" == "null" ]; then
  echo "invalid connection definition";
  exit -1;
fi;

INVOCATION="$INVOCATION $*";

source "$QSH_BASE/clients/$CLIENT_NAME/qsh-connect";
