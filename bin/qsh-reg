#!/bin/bash

QSH_BASE=~/.qsh
QSH_CONNECTIONS=$QSH_BASE/.connections
QSH_CLIENTS=$QSH_BASE/clients

# Make sure we have jq installed
JQ=$(which jq 2>/dev/null);
if [[ "$?" -ne 0 ]]; then
  echo "could not find jq";
  exit -1;
fi;

function usage() {
  echo "usage: qsh-reg [-pxsvde] <name> <invocation>";
  exit 0;
}

PROMPT=true
VANILLA=false

while getopts "pxsvde" arg; do
  case $arg in
    p)
      USING_PASSWORD=1
      ;;
    x)
      OVERWRITE_EXISTING=1
      ;;
    s)
      PROMPT=false
      ;;
    v)
      VANILLA=true
      ;;
    d)
      DELETE=1
      ;;
    e)
      EDIT=1
      ;;
  esac
done

# Move past the options
shift $(expr $OPTIND - 1);

NAME=$1
[[ -z "$NAME" ]] && usage;
[[ "$NAME" =~ ^-.* ]] && usage;

CONNECTION_FILE=$QSH_CONNECTIONS/${NAME}.json

# Handle editing
if [[ ! -z "$EDIT" ]]; then
  if [[ ! -f "$CONNECTION_FILE" ]]; then
    echo "invalid connection exists";
    exit -1;
  fi;

  EDITOR=${EDITOR:-$VISUAL}
  EDITOR=${EDITOR:-$QSH_EDITOR}
  if [[ -z "$EDITOR" ]]; then
    echo 'could not find editor, set $EDITOR/$VISUAL';
    exit -1
  fi;

  "$EDITOR" "$CONNECTION_FILE";
  exit 0;
fi;

# Handle deleting of connections
if [[ ! -z "$DELETE" ]]; then
  rm -f "$CONNECTION_FILE";
  exit 0;
fi;

shift 1;
CLIENT=$1
[[ -z "$CLIENT" ]] && usage;

CLIENT_NAME=$(basename "$CLIENT");
if [[ ! -d "$QSH_CLIENTS/$CLIENT_NAME" ]]; then
  echo "unknown client '$CLIENT_NAME'";
  exit -1;
fi;

shift 1;
INVOCATION="$*"

if [ -f "$CONNECTION_FILE" ] && [ -z "$OVERWRITE_EXISTING" ]; then
  echo "connection exists, use -x to overwrite";
  exit -1;
fi;

if [[ ! -z "$USING_PASSWORD" ]]; then
  read -sp 'Password: ' PASSWORD;
  echo;
fi;

# Ensure the destination directory exists
mkdir -p "$(dirname "$CONNECTION_FILE")";

cat <<EOF | jq > "$CONNECTION_FILE"
{
  "client": "$CLIENT",
  "invocation": "$INVOCATION",
  "prompt": $PROMPT,
  "vanilla": $VANILLA
  $([[ ! -z "$USING_PASSWORD" ]] && echo ", \"password\": \"$PASSWORD\"")
}
EOF

chmod 0600 "$CONNECTION_FILE";

